/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import javax.swing.JOptionPane;

/**
 *
 * @author Others
 */
public class StartGameFrame extends javax.swing.JFrame {

    /**
     * Creates new form StartGameFrame
     */
    public StartGameFrame() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vsBotFirstToMoveGroup = new javax.swing.ButtonGroup();
        titleLabel = new javax.swing.JLabel();
        vsHumanPane = new javax.swing.JLayeredPane();
        playHumanButton = new javax.swing.JButton();
        humanDescriptionLabel = new javax.swing.JLabel();
        vsBotPanel = new javax.swing.JPanel();
        botDescriptionLabel = new javax.swing.JLabel();
        playBotButton = new javax.swing.JButton();
        firstMoveBotRadio = new javax.swing.JRadioButton();
        firstMoveHumanRadio = new javax.swing.JRadioButton();
        firstMoveLabel = new javax.swing.JLabel();
        difficulitySlider = new javax.swing.JSlider();
        difficulityLabel = new javax.swing.JLabel();
        networkPanel = new javax.swing.JPanel();
        hostPanel = new javax.swing.JPanel();
        enableConnection = new javax.swing.JCheckBox();
        hostIPLabel = new javax.swing.JLabel();
        hostPortLabel = new javax.swing.JLabel();
        hostIP = new javax.swing.JTextField();
        hostPort = new javax.swing.JTextField();
        hostDescription = new javax.swing.JLabel();
        joinPanel = new javax.swing.JPanel();
        joinPeerButton = new javax.swing.JButton();
        joinIPLabel = new javax.swing.JLabel();
        peerIP = new javax.swing.JTextField();
        joinPortLabel = new javax.swing.JLabel();
        peerPort = new javax.swing.JTextField();
        joinDescriptionLabel = new javax.swing.JLabel();
        joinStatusLabel = new javax.swing.JLabel();
        infoButton = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/title.png"))); // NOI18N
        getContentPane().add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 580, 160));

        vsHumanPane.setBackground(new java.awt.Color(0, 153, 255));
        vsHumanPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "vs Human", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        playHumanButton.setText("Play");
        playHumanButton.setFocusable(false);
        playHumanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playHumanButtonActionPerformed(evt);
            }
        });
        vsHumanPane.add(playHumanButton);
        playHumanButton.setBounds(20, 40, 70, 30);

        humanDescriptionLabel.setText("Play vs another human on this pc.");
        vsHumanPane.add(humanDescriptionLabel);
        humanDescriptionLabel.setBounds(120, 40, 250, 30);

        getContentPane().add(vsHumanPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 390, 100));

        vsBotPanel.setBackground(new java.awt.Color(51, 255, 0));
        vsBotPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "vs Bot", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        vsBotPanel.setOpaque(false);
        vsBotPanel.setLayout(null);

        botDescriptionLabel.setText("Play vs a bot with varying difficulity.");
        vsBotPanel.add(botDescriptionLabel);
        botDescriptionLabel.setBounds(120, 100, 250, 30);

        playBotButton.setText("Play");
        playBotButton.setFocusable(false);
        playBotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playBotButtonActionPerformed(evt);
            }
        });
        vsBotPanel.add(playBotButton);
        playBotButton.setBounds(20, 60, 70, 30);

        vsBotFirstToMoveGroup.add(firstMoveBotRadio);
        firstMoveBotRadio.setText("Bot");
        firstMoveBotRadio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        firstMoveBotRadio.setOpaque(false);
        vsBotPanel.add(firstMoveBotRadio);
        firstMoveBotRadio.setBounds(210, 30, 60, 23);

        vsBotFirstToMoveGroup.add(firstMoveHumanRadio);
        firstMoveHumanRadio.setSelected(true);
        firstMoveHumanRadio.setText("Human");
        firstMoveHumanRadio.setToolTipText("");
        firstMoveHumanRadio.setOpaque(false);
        vsBotPanel.add(firstMoveHumanRadio);
        firstMoveHumanRadio.setBounds(260, 30, 80, 23);

        firstMoveLabel.setText("First Move:");
        vsBotPanel.add(firstMoveLabel);
        firstMoveLabel.setBounds(120, 30, 80, 20);

        difficulitySlider.setMajorTickSpacing(1);
        difficulitySlider.setMaximum(5);
        difficulitySlider.setMinimum(1);
        difficulitySlider.setPaintLabels(true);
        difficulitySlider.setPaintTicks(true);
        difficulitySlider.setSnapToTicks(true);
        difficulitySlider.setFocusable(false);
        difficulitySlider.setOpaque(false);
        difficulitySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                difficulitySliderStateChanged(evt);
            }
        });
        vsBotPanel.add(difficulitySlider);
        difficulitySlider.setBounds(200, 60, 120, 40);

        difficulityLabel.setText("Difficulity:");
        vsBotPanel.add(difficulityLabel);
        difficulityLabel.setBounds(120, 70, 60, 14);

        getContentPane().add(vsBotPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 390, 140));

        networkPanel.setBackground(new java.awt.Color(255, 0, 0));
        networkPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Network", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        networkPanel.setOpaque(false);
        networkPanel.setLayout(null);

        hostPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Host", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        hostPanel.setOpaque(false);
        hostPanel.setLayout(null);

        enableConnection.setText("Enable connections");
        enableConnection.setToolTipText("");
        enableConnection.setFocusable(false);
        enableConnection.setOpaque(false);
        enableConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableConnectionActionPerformed(evt);
            }
        });
        hostPanel.add(enableConnection);
        enableConnection.setBounds(10, 20, 150, 30);

        hostIPLabel.setText("IP:");
        hostPanel.add(hostIPLabel);
        hostIPLabel.setBounds(160, 30, 20, 14);

        hostPortLabel.setText("Port:");
        hostPanel.add(hostPortLabel);
        hostPortLabel.setBounds(270, 30, 30, 14);

        hostIP.setEditable(false);
        hostIP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hostIP.setOpaque(false);
        hostIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostIPActionPerformed(evt);
            }
        });
        hostPanel.add(hostIP);
        hostIP.setBounds(180, 20, 80, 30);

        hostPort.setEditable(false);
        hostPort.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hostPort.setOpaque(false);
        hostPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostPortActionPerformed(evt);
            }
        });
        hostPanel.add(hostPort);
        hostPort.setBounds(310, 20, 50, 30);

        hostDescription.setText("Host server to enable LAN peers to initiate game");
        hostPanel.add(hostDescription);
        hostDescription.setBounds(20, 60, 330, 14);

        networkPanel.add(hostPanel);
        hostPanel.setBounds(10, 20, 370, 90);

        joinPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Join", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        joinPanel.setOpaque(false);
        joinPanel.setLayout(null);

        joinPeerButton.setText("Join");
        joinPeerButton.setFocusable(false);
        joinPeerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinPeerButtonActionPerformed(evt);
            }
        });
        joinPanel.add(joinPeerButton);
        joinPeerButton.setBounds(10, 20, 70, 30);

        joinIPLabel.setText("IP:");
        joinPanel.add(joinIPLabel);
        joinIPLabel.setBounds(160, 30, 20, 14);

        peerIP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        peerIP.setOpaque(false);
        joinPanel.add(peerIP);
        peerIP.setBounds(180, 20, 80, 30);

        joinPortLabel.setText("Port:");
        joinPanel.add(joinPortLabel);
        joinPortLabel.setBounds(270, 30, 30, 14);

        peerPort.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        peerPort.setOpaque(false);
        peerPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peerPortActionPerformed(evt);
            }
        });
        joinPanel.add(peerPort);
        peerPort.setBounds(310, 20, 50, 30);

        joinDescriptionLabel.setText("Initiate game with LAN peer hosting a server");
        joinPanel.add(joinDescriptionLabel);
        joinDescriptionLabel.setBounds(10, 60, 310, 14);

        joinStatusLabel.setForeground(new java.awt.Color(255, 0, 51));
        joinStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        joinStatusLabel.setFocusable(false);
        joinPanel.add(joinStatusLabel);
        joinStatusLabel.setBounds(10, 80, 350, 20);

        networkPanel.add(joinPanel);
        joinPanel.setBounds(10, 110, 370, 110);

        getContentPane().add(networkPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, 390, 230));

        infoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/about.png"))); // NOI18N
        infoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoButtonMouseClicked(evt);
            }
        });
        getContentPane().add(infoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 610, -1, 50));

        backgroundLabel.setBackground(new java.awt.Color(204, 204, 255));
        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/light-wooden-background.jpg"))); // NOI18N
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, -6, 610, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hostPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hostPortActionPerformed

    private void peerPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peerPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peerPortActionPerformed

    private void hostIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostIPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hostIPActionPerformed

    private void playHumanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playHumanButtonActionPerformed
        // TODO add your handling code here:
        onHumanPlay();
    }//GEN-LAST:event_playHumanButtonActionPerformed

    private void playBotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playBotButtonActionPerformed
        // TODO add your handling code here:
        onBotPlay();
    }//GEN-LAST:event_playBotButtonActionPerformed

    private void enableConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableConnectionActionPerformed
        // TODO add your handling code here:
        onEnableConnectionsToggled();
    }//GEN-LAST:event_enableConnectionActionPerformed

    private void joinPeerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinPeerButtonActionPerformed
        // TODO add your handling code here:
        onJoinNetworkGame();
    }//GEN-LAST:event_joinPeerButtonActionPerformed

    private void difficulitySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_difficulitySliderStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_difficulitySliderStateChanged

    private void infoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoButtonMouseClicked
        // TODO add your handling code here:
        onAboutClicked();
    }//GEN-LAST:event_infoButtonMouseClicked

    protected void onAboutClicked() {
        String info = "Author: Ron Teller"+System.lineSeparator()+"Reversi Project 2016";
        JOptionPane.showMessageDialog(null, info);
    }

    protected void onJoinNetworkGame() {
        
    }
    
    protected void onHumanPlay() {
        
    }
    
    protected void onBotPlay() {
        
    }
    
    protected void onEnableConnectionsToggled() {
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartGameFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JLabel botDescriptionLabel;
    private javax.swing.JLabel difficulityLabel;
    protected javax.swing.JSlider difficulitySlider;
    public javax.swing.JCheckBox enableConnection;
    public javax.swing.JRadioButton firstMoveBotRadio;
    public javax.swing.JRadioButton firstMoveHumanRadio;
    private javax.swing.JLabel firstMoveLabel;
    private javax.swing.JLabel hostDescription;
    public javax.swing.JTextField hostIP;
    private javax.swing.JLabel hostIPLabel;
    private javax.swing.JPanel hostPanel;
    public javax.swing.JTextField hostPort;
    private javax.swing.JLabel hostPortLabel;
    private javax.swing.JLabel humanDescriptionLabel;
    private javax.swing.JLabel infoButton;
    private javax.swing.JLabel joinDescriptionLabel;
    private javax.swing.JLabel joinIPLabel;
    private javax.swing.JPanel joinPanel;
    public javax.swing.JButton joinPeerButton;
    private javax.swing.JLabel joinPortLabel;
    public javax.swing.JLabel joinStatusLabel;
    private javax.swing.JPanel networkPanel;
    public javax.swing.JTextField peerIP;
    public javax.swing.JTextField peerPort;
    public javax.swing.JButton playBotButton;
    public javax.swing.JButton playHumanButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.ButtonGroup vsBotFirstToMoveGroup;
    private javax.swing.JPanel vsBotPanel;
    private javax.swing.JLayeredPane vsHumanPane;
    // End of variables declaration//GEN-END:variables
}
