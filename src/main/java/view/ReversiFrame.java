/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.event.ItemEvent;
import javax.swing.JSlider;

/**
 *
 * @author Others
 */
public class ReversiFrame extends javax.swing.JFrame {

    /**
     * Creates new form ReversiFrame
     */
    public ReversiFrame() {
        initComponents();
        hostColor.setVisible(false);
        hostColorLabel.setVisible(false);
        hostColor.setBackground(new java.awt.Color(0,0,0,0));
        turnText.setBackground(new java.awt.Color(0,0,0,0));
        whiteScoreText.setBackground(new java.awt.Color(0,0,0,0));
        blackScoreText.setBackground(new java.awt.Color(0,0,0,0));
        minimaxLabel.setBackground(new java.awt.Color(0,0,0,0));
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameStatus = new javax.swing.JLabel();
        reversiBoard = new view.board.ReversiBoard();
        whiteScoreLabel = new javax.swing.JLabel();
        blackScoreLabel = new javax.swing.JLabel();
        hostColor = new javax.swing.JTextField();
        hostColorLabel = new javax.swing.JLabel();
        whiteScoreText = new javax.swing.JTextField();
        blackScoreText = new javax.swing.JTextField();
        scoreText = new javax.swing.JTextField();
        turnText = new javax.swing.JTextField();
        turnLabel = new javax.swing.JLabel();
        showMoves = new javax.swing.JRadioButton();
        sound = new javax.swing.JRadioButton();
        moveMeButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        minimaxDepthSlider = new javax.swing.JSlider();
        minimaxLabel = new javax.swing.JTextField();
        submitMessageTextField = new javax.swing.JTextField();
        messageScrollPane = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gameStatus.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        gameStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gameStatus.setText("Your turn!");
        getContentPane().add(gameStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 790, 300, 30));
        getContentPane().add(reversiBoard, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, 647));

        whiteScoreLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/pieces/white.png"))); // NOI18N
        getContentPane().add(whiteScoreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, 60));

        blackScoreLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/pieces/black.png"))); // NOI18N
        blackScoreLabel.setToolTipText("");
        getContentPane().add(blackScoreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, -1, -1));

        hostColor.setEditable(false);
        hostColor.setFont(new java.awt.Font("Showcard Gothic", 1, 36)); // NOI18N
        hostColor.setText("YOU");
        hostColor.setToolTipText("");
        hostColor.setBorder(null);
        hostColor.setFocusable(false);
        hostColor.setOpaque(false);
        hostColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostColorActionPerformed(evt);
            }
        });
        getContentPane().add(hostColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 650, 90, 70));

        hostColorLabel.setToolTipText("");
        hostColorLabel.setFocusable(false);
        getContentPane().add(hostColorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 710, 70, 70));

        whiteScoreText.setEditable(false);
        whiteScoreText.setFont(new java.awt.Font("Showcard Gothic", 1, 48)); // NOI18N
        whiteScoreText.setBorder(null);
        whiteScoreText.setOpaque(false);
        whiteScoreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiteScoreTextActionPerformed(evt);
            }
        });
        getContentPane().add(whiteScoreText, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 70, 50));

        blackScoreText.setEditable(false);
        blackScoreText.setFont(new java.awt.Font("Showcard Gothic", 1, 48)); // NOI18N
        blackScoreText.setBorder(null);
        blackScoreText.setOpaque(false);
        getContentPane().add(blackScoreText, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 70, 50));

        scoreText.setEditable(false);
        scoreText.setFont(new java.awt.Font("Showcard Gothic", 1, 48)); // NOI18N
        scoreText.setText("SCORE");
        scoreText.setBorder(null);
        scoreText.setOpaque(false);
        scoreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoreTextActionPerformed(evt);
            }
        });
        getContentPane().add(scoreText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 170, 70));

        turnText.setEditable(false);
        turnText.setFont(new java.awt.Font("Showcard Gothic", 1, 48)); // NOI18N
        turnText.setText("TURN");
        turnText.setBorder(null);
        turnText.setOpaque(false);
        getContentPane().add(turnText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, 150, 50));
        getContentPane().add(turnLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 560, 70, 70));

        showMoves.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        showMoves.setSelected(true);
        showMoves.setText("SHOW MOVES");
        showMoves.setBorder(null);
        showMoves.setOpaque(false);
        showMoves.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showMovesItemStateChanged(evt);
            }
        });
        showMoves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMovesActionPerformed(evt);
            }
        });
        getContentPane().add(showMoves, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 190, 50));

        sound.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        sound.setSelected(true);
        sound.setText("SOUND");
        sound.setBorder(null);
        sound.setOpaque(false);
        sound.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                soundItemStateChanged(evt);
            }
        });
        getContentPane().add(sound, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 720, -1, -1));

        moveMeButton.setBackground(new java.awt.Color(255, 255, 255));
        moveMeButton.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        moveMeButton.setText("Move Me");
        moveMeButton.setToolTipText("");
        moveMeButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        moveMeButton.setContentAreaFilled(false);
        moveMeButton.setFocusPainted(false);
        moveMeButton.setFocusable(false);
        moveMeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        moveMeButton.setInheritsPopupMenu(true);
        moveMeButton.setMargin(new java.awt.Insets(2, 8, 2, 4));
        moveMeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveMeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(moveMeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 300, 130, 60));

        resetButton.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        resetButton.setText("RESET");
        resetButton.setToolTipText("");
        resetButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        resetButton.setContentAreaFilled(false);
        resetButton.setFocusPainted(false);
        resetButton.setFocusable(false);
        resetButton.setSelected(true);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        getContentPane().add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 400, 130, 60));

        titleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/title.png"))); // NOI18N
        getContentPane().add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 570, 130));

        minimaxDepthSlider.setBackground(new java.awt.Color(218, 218, 30));
        minimaxDepthSlider.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 14)); // NOI18N
        minimaxDepthSlider.setForeground(new java.awt.Color(102, 102, 0));
        minimaxDepthSlider.setMajorTickSpacing(1);
        minimaxDepthSlider.setMaximum(5);
        minimaxDepthSlider.setMinimum(1);
        minimaxDepthSlider.setPaintLabels(true);
        minimaxDepthSlider.setPaintTicks(true);
        minimaxDepthSlider.setSnapToTicks(true);
        minimaxDepthSlider.setToolTipText("");
        minimaxDepthSlider.setOpaque(false);
        minimaxDepthSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minimaxDepthSliderStateChanged(evt);
            }
        });
        getContentPane().add(minimaxDepthSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 570, 140, -1));

        minimaxLabel.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        minimaxLabel.setText("DIFFICULITY");
        minimaxLabel.setToolTipText("");
        minimaxLabel.setBorder(null);
        minimaxLabel.setOpaque(false);
        minimaxLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimaxLabelActionPerformed(evt);
            }
        });
        getContentPane().add(minimaxLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 540, 130, -1));

        submitMessageTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        submitMessageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitMessageTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(submitMessageTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 940, 510, 30));

        messageScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        messageTextArea.setEditable(false);
        messageTextArea.setBackground(new java.awt.Color(250, 250, 252));
        messageTextArea.setColumns(20);
        messageTextArea.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        messageTextArea.setLineWrap(true);
        messageTextArea.setRows(5);
        messageTextArea.setToolTipText("");
        messageTextArea.setWrapStyleWord(true);
        messageTextArea.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        messageScrollPane.setViewportView(messageTextArea);

        getContentPane().add(messageScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 820, 510, 120));

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/light-wooden-background.jpg"))); // NOI18N
        backgroundLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 1070, 980));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void whiteScoreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiteScoreTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_whiteScoreTextActionPerformed

    private void hostColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hostColorActionPerformed

    private void showMovesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showMovesItemStateChanged
        // TODO add your handling code here:
        boolean isEnabled = evt.getStateChange() == ItemEvent.SELECTED;
        onShowMovesToggled(isEnabled);
    }//GEN-LAST:event_showMovesItemStateChanged

    private void soundItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_soundItemStateChanged
        // TODO add your handling code here:
        boolean isEnabled = evt.getStateChange() == ItemEvent.SELECTED;
        onSoundEnabledToggled(isEnabled);
    }//GEN-LAST:event_soundItemStateChanged

    private void minimaxLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimaxLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minimaxLabelActionPerformed

    private void minimaxDepthSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minimaxDepthSliderStateChanged
        // TODO add your handling code here:
        int depth = ((JSlider) minimaxDepthSlider).getValue();
        onMinimaxDepthChanged(depth);
    }//GEN-LAST:event_minimaxDepthSliderStateChanged

    private void showMovesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMovesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showMovesActionPerformed

    private void moveMeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveMeButtonActionPerformed
        // TODO add your handling code here:
        onMoveMeButtonPressed();
    }//GEN-LAST:event_moveMeButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        onResetButtonPressed();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void submitMessageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitMessageTextFieldActionPerformed
        // TODO add your handling code here:
        String text = submitMessageTextField.getText();
        submitMessageTextField.setText("");
        onMessageSubmitted(text);
    }//GEN-LAST:event_submitMessageTextFieldActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        onClosed();
    }//GEN-LAST:event_formWindowClosed

    private void scoreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoreTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scoreTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReversiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReversiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReversiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReversiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReversiFrame().setVisible(true);
            }
        });
    }
    
    protected void onClosed() {
        
    }
    
    protected void onMessageSubmitted(String message) {

    }
    
    protected void onMoveMeButtonPressed() {

    }
    
    protected void onResetButtonPressed() {
        
    }
    
    protected void onMinimaxDepthChanged(int depth) {

    }
    
    protected void onShowMovesToggled(boolean isEnabled) {
        
    }
    
    protected void onSoundEnabledToggled(boolean isEnabled) {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JLabel blackScoreLabel;
    protected javax.swing.JTextField blackScoreText;
    protected javax.swing.JLabel gameStatus;
    protected javax.swing.JTextField hostColor;
    protected javax.swing.JLabel hostColorLabel;
    private javax.swing.JScrollPane messageScrollPane;
    protected javax.swing.JTextArea messageTextArea;
    protected javax.swing.JSlider minimaxDepthSlider;
    protected javax.swing.JTextField minimaxLabel;
    protected javax.swing.JButton moveMeButton;
    protected javax.swing.JButton resetButton;
    protected view.board.ReversiBoard reversiBoard;
    private javax.swing.JTextField scoreText;
    protected javax.swing.JRadioButton showMoves;
    protected javax.swing.JRadioButton sound;
    protected javax.swing.JTextField submitMessageTextField;
    private javax.swing.JLabel titleLabel;
    protected javax.swing.JLabel turnLabel;
    private javax.swing.JTextField turnText;
    private javax.swing.JLabel whiteScoreLabel;
    protected javax.swing.JTextField whiteScoreText;
    // End of variables declaration//GEN-END:variables
}
